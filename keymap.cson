# Your keymap
#
# Atom keymaps work similarly to stylesheets. Just as stylesheets use selectors
# to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# '.workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/customizing-atom#customizing-key-bindings
# * https://atom.io/docs/latest/advanced/keymaps
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it here:
# https://github.com/bevry/cson#what-is-cson

'.platform-linux, .platform-win32':
  'F5': 'build:trigger'
  'escape': 'build:stop'

'.workspace .editor':
  'ctrl-alt-shift-f': 'ide-haskell:prettify-file'
  'ctrl-0': 'window:reset-font-size'
  'ctrl-shift-up': 'editor:add-selection-above'
  'ctrl-shift-down': 'editor:add-selection-below'
  'ctrl-d': 'editor:duplicate-lines'
  'alt-down': 'editor:move-line-down'
  'alt-up': 'editor:move-line-up'
  'ctrl-up': 'editor:move-up'
  'ctrl-down': 'editor:move-down'
  'ctrl-alt-a': 'atom-alignment:align'
  'ctrl-A': 'tabularize:toggle'
  'ctrl-enter': 'find-and-replace:replace-all'
  'ctrl-h': 'find-and-replace:show'
  'ctrl-alt-shift-f': 'ide-haskell:prettify-file'
  'ctrl-r': 'run-command:run'
  'ctrl-alt-x': 'run-command:toggle-panel'
  'ctrl-alt-shift-x': 'run-command:kill-last-command'
  'ctrl-alt-r': 'run-command:re-run-last-command'

'.workspace':
  'ctrl-alt-shift-o': 'ide-haskell:toggle-output'

'body':
  # Reserved for virtual desktops
  'ctrl-alt-up': 'native!'
  'ctrl-alt-down': 'native!'
  'ctrl-alt-down': 'native!'
  'ctrl-alt-down': 'native!'
  'ctrl-alt-shift-down': 'native!'
